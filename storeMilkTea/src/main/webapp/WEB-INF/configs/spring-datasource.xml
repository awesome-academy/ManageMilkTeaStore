<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <tx:annotation-driven proxy-target-class="true"
                          transaction-manager="transactionManager"/>

    <context:property-placeholder location="
    classpath:datasources.properties
    , classpath:email.properties
    , classpath:Application.properties"/>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <!-- Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!-- Set hibernate's properties -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.c3p0.min_size">1</prop>
                <prop key="hibernate.c3p0.max_size">150</prop>
                <prop key="hibernate.c3p0.max_statements">300</prop>
                <prop key="hibernate.c3p0.timeout">1800</prop>
                <prop key="hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}</prop>
                <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
            </props>
        </property>

        <!-- Load mapping of model and table -->
        <property name="annotatedClasses">
            <list>
                <value>app.model.CartDetail</value>
                <value>app.model.CartDetail</value>
                <value>app.model.Cart</value>
                <value>app.model.Category</value>
                <value>app.model.Delivery</value>
                <value>app.model.OrderDetail</value>
                <value>app.model.Order</value>
                <value>app.model.Payment</value>
                <value>app.model.PaymentMethod</value>
                <value>app.model.Product</value>
                <value>app.model.Profile</value>
                <value>app.model.Review</value>
                <value>app.model.Role</value>
                <value>app.model.Size</value>
                <value>app.model.User</value>
                <value>app.model.VerificationToken</value>
            </list>
        </property>


    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Define scope transaction -->
    <bean id="baseTransactionProxy" abstract="true"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>

        <!-- Define methods which use transaction. If property is PROPAGATION_REQUIRED,
            when access db, MUST use transaction -->
        <property name="transactionAttributes">
            <props>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- SMTP settings -->
        <property name="host" value="${spring.mail.host}" />
        <property name="port" value="${spring.mail.port}" />
        <property name="username" value="${spring.mail.username}" />
        <property name="password" value="${spring.mail.password}" />
        <property name="javaMailProperties">
            <!-- additional properties specific to JavaMail -->
            <props>
                <prop key="mail.transport.protocol">${spring.mail.transport.protocol}</prop>
                <prop key="mail.smtp.auth">${spring.mail.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${spring.mail.smtp.starttls.enable}</prop>
                <prop key="mail.debug">${spring.mail.debug}</prop>
            </props>
        </property>
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>

    <bean id="freeMarkerConfigurationFactory" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="classpath:/templates/"/>
        <property name="preferFileSystemAccess" value="false"/>
    </bean>

</beans>